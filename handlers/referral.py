from telegram import Update, InlineKeyboardButton
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

from config import REFERRAL_BONUS
from utils.keyboards import Keyboards
from utils.database import Database
from utils.helpers import format_currency, plural_form

db = Database()

async def handle_referral(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å—Å—ã–ª–∫—É"""
    query = update.callback_query
    user_id = query.from_user.id
    
    bot_username = context.bot.username
    ref_link = f"https://t.me/{bot_username}?start={user_id}"
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    referrals = db.get_user_referrals(user_id)
    total_earned = len(referrals) * REFERRAL_BONUS
    
    ref_text = f"""üë• *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*

üí∞ –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ *{format_currency(REFERRAL_BONUS)}* –∑–∞ –∫–∞–∂–¥–æ–≥–æ!

üîó *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*
`{ref_link}`

üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: *{len(referrals)}* {plural_form(len(referrals), ('–¥—Ä—É–≥', '–¥—Ä—É–≥–∞', '–¥—Ä—É–∑–µ–π'))}
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: *{format_currency(total_earned)}*

üöÄ *–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å:*
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
2. –î—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
3. –í—ã –ø–æ–ª—É—á–∏—Ç–µ {format_currency(REFERRAL_BONUS)} –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥—Ä—É–≥–∞ –Ω–∞ –∫–∞–Ω–∞–ª

üí° –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ!"""

    share_button = [[
        InlineKeyboardButton(
            "üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π", 
            url=f"https://t.me/share/url?url={ref_link}&text=üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫—Ä—É—Ç–æ–º—É –∑–∞—Ä–∞–±–æ—Ç–æ–∫-–±–æ—Ç—É!"
        )
    ]]
    keyboard = Keyboards.add_back_button(share_button)

    await query.edit_message_text(
        text=ref_text,
        reply_markup=keyboard,
        parse_mode=ParseMode.MARKDOWN
    )

async def create_ref_link(user_id: int, bot_username: str) -> str:
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"""
    return f"https://t.me/{bot_username}?start={user_id}"